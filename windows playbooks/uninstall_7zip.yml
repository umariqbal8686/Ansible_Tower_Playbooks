---
- name: Manage 7-Zip on Windows hosts
  hosts: all
  gather_facts: false
  
  become: true
  become_method: runas
  become_user: "Administrator"  # Specify the user to run as
  
  tasks:
    - name: Get 7-Zip installation details
      win_shell: |
        $ErrorActionPreference = 'SilentlyContinue'
        
        # Method 1: Direct registry check
        $paths = @(
            'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*',
            'HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*'
        )
        
        foreach ($path in $paths) {
            $app = Get-ItemProperty $path | Where-Object { 
                $_.DisplayName -like '7-Zip*'
            } | Select-Object -First 1
            
            if ($app -and $app.PSChildName) {
                Write-Output $app.PSChildName
                exit 0
            }
        }
        
        Write-Output "NO_PRODUCT_FOUND"
      register: find_7zip
      changed_when: false

    - name: Debug - Show found product code
      debug:
        var: find_7zip.stdout_lines[0]
      
    - name: Uninstall 7-Zip (if found)
      win_package:
        product_id: '{{ find_7zip.stdout_lines[0] }}'
        state: absent
      when: find_7zip.stdout_lines[0] != "NO_PRODUCT_FOUND"
      register: uninstall_result
      
    - name: Show uninstall log if available
      win_shell: |
        if (Test-Path "C:\Windows\Temp\7zip_uninstall.log") {
          Get-Content "C:\Windows\Temp\7zip_uninstall.log" | Select-Object -Last 20
        }
      when: uninstall_result.changed
      register: log_output
      
    - name: Debug - Show uninstall log
      debug:
        var: log_output.stdout_lines
      when: log_output is defined
