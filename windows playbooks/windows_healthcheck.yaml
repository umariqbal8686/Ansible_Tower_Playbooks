---
- name: Perform comprehensive health check on Windows servers
  hosts: all
  gather_facts: no # Disable automatic fact gathering
  tasks:
    - name: Ping the host to check WinRM connectivity
      ansible.windows.win_ping:
      register: ping_test
      ignore_errors: true

    - name: Fail if WinRM connection failed
      ansible.builtin.fail:
        msg: "Failed to connect to host {{ inventory_hostname }} via WinRM. Check credentials and WinRM configuration."
      when: ping_test.failed

    - name: Gather facts for reachable hosts
      ansible.builtin.setup:
      when: not ping_test.failed

    - name: Get CPU usage percentage via PowerShell
      ansible.windows.win_shell: |
        (Get-CimInstance -ClassName Win32_PerfFormattedData_PerfOS_Processor | Measure-Object -Property PercentProcessorTime -Average).Average
      register: cpu_usage
      changed_when: false
      when: not ping_test.failed

    - name: Get system uptime in days via PowerShell
      ansible.windows.win_shell: |
        (New-TimeSpan -Start (Get-CimInstance -ClassName Win32_OperatingSystem).LastBootUpTime -End (Get-Date)).TotalDays
      register: uptime_days
      changed_when: false
      when: not ping_test.failed

    - name: Get information about critical services
      ansible.windows.win_service_info:
        name: "{{ item }}"
      loop:
        - Spooler
        - Winmgmt
      register: service_info_results
      when: not ping_test.failed

    - name: Check for pending Windows updates
      ansible.windows.win_updates:
        state: searched
        category_names:
          - CriticalUpdates
          - SecurityUpdates
          - UpdateRollups
          - Updates
      register: update_check
      ignore_errors: true
      when: not ping_test.failed

    - name: Display health check report
      ansible.builtin.debug:
        msg: |
          --- Health Check Report for {{ ansible_hostname }} ---
          Connectivity: OK
          OS Name: {{ ansible_facts.os_name }}
          OS Version: {{ ansible_facts.os_version }}
          OS Build: {{ ansible_facts.product_build }}
          System Uptime: {{ uptime_days.stdout | float | round(2) }} days
          Average CPU Usage: {{ cpu_usage.stdout | replace(',', '.') | float | round(2) }}%
          Total Memory: {{ (ansible_facts.memtotal_mb / 1024) | round(2) }} GB
          Free Memory: {{ (ansible_facts.memfree_mb / 1024) | round(2) }} GB
      when: not ping_test.failed

    - name: Display disk space usage and check for low space
      ansible.builtin.debug:
        msg: |
          {% for mount in ansible_facts.mounts %}
          Drive {{ mount.mount }} has {{ (mount.size_available / 1024**3) | round(2) }} GB free of {{ (mount.size_total / 1024**3) | round(2) }} GB total ({{ (mount.size_available / mount.size_total * 100) | round(2) }}% free).
          {% if (mount.size_available / mount.size_total * 100) < 10 %}
          WARNING: Low disk space on {{ mount.mount }}.
          {% endif %}
          {% endfor %}
      when: ansible_facts.mounts is defined and not ping_test.failed

    - name: Check status of critical services
      ansible.builtin.debug:
        msg: "WARNING: Service {{ item.item }} is not running (Current State: {{ item.services.state }})"
      loop: "{{ service_info_results.results }}"
      when: not ping_test.failed and item.services.state != 'Running'

    - name: Report on pending Windows updates
      ansible.builtin.debug:
        msg: "{{ update_check.updates | length }} updates are pending installation."
      when: not ping_test.failed and update_check.updates is defined and update_check.updates | length > 0

    - name: Report no pending updates found
      ansible.builtin.debug:
        msg: "No pending updates found."
      when: not ping_test.failed and update_check.updates is defined and update_check.updates | length == 0
